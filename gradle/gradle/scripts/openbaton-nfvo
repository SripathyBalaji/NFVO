#!/bin/sh -e

. /lib/lsb/init-functions

OPENBATON_NFVO_CONFIG_FILE=/etc/openbaton/openbaton.properties
INSTALL_DIR=/usr/lib/openbaton
PID_FILE=/var/run/openbaton-nfvo.pid
DAEMON_USER=root
OSTYPE=$(uname)


###################
#### Rabbitmq #####
###################

check_rabbitmq () {
	if [ "$OSTYPE" = "Linux" ]; then
        instance=$(ps aux | grep -v grep | grep rabbitmq | grep server | wc -l) 
        if [ ${instance} -eq 0 ]; then
            log_warning_msg "rabbit is not running, let's try to start it"
			start_rabbitmq                        
        fi
    elif [ ${OSTYPE} -eq "Darwin" ]; then
        instance=$(ps aux | grep -v grep | grep rabbitmq | grep server | wc -l) 
        if [ ${instance} -eq 0 ]; then
            log_warning_msg "rabbitmq is not running, let's try to start it"
			start_rabbitmq                        
        fi
    fi    
}

start_rabbitmq () {
    $(rabbitmq-server -detached)
    if [ $? -ne 0 ]; then
        log_failure_msg "rabbitmq is not running properly (check the problem in /var/log/rabbitmq.log)"
        exit 1
    fi
}


####################
#### Open Baton ####
####################

check_already_running () {
    if [ "$OSTYPE" = "Linux" ]; then
        instance=$(ps aux | grep -v grep | grep "openbaton-nfvo" | grep jar | wc -l)
        if [ ${instance} -ne 0 ] ; then
            log_warning_msg "OpenBaton NFVO is already running"
            exit 1
        fi
    elif [ ${OSTYPE} -eq "Darwin" ]; then
        PROCESS_PID=$(launchctl list | grep "org.openbaton.nfvo.app" | awk {'print $1}')
        if [ "$PROCESS_PID" != "-" ]; then
            echo "OpenBaton NFVO is already running"
            exit 1
        fi
    fi
}

set_jar_version () {
    # TODO: so far the most recent openbaton-nfvo jar is chosen to be executed
	#       -> add alternative version selection (with prompt question and/or with command line -v parameter)
	OPENBATON_NFVO_JAR=$(ls -ct ${INSTALL_DIR} | grep "openbaton" | grep jar | head -n 1)
	if [ ${OPENBATON_NFVO_JAR} = "" ]; then
        log_failure_msg "The Open Baton NFVO is not installed (jar-file not found)"
		exit 1
    fi
}

configure () {
    check_already_running
    check_rabbitmq
    set_jar_version
}

start () {
    configure
    log_success_msg "Starting the Open Baton NFVO .."
    if [ "$OSTYPE" = "Linux" ]; then
        start-stop-daemon --start --background --pidfile ${PID_FILE} --make-pidfile --user ${DAEMON_USER} --chuid ${DAEMON_USER} --exec /usr/bin/java -- -jar ${INSTALL_DIR}/${OPENBATON_NFVO_JAR} --spring.config.location=file:${OPENBATON_NFVO_CONFIG_FILE}

    elif [ ${OSTYPE} -eq "Darwin" ]; then
        launchctl start org.openbaton.nfvo.app
    fi
}

stop () {
    log_success_msg "Stopping the Open Baton NFVO .."
    start-stop-daemon --stop --pidfile $PID_FILE
}

restart () {
    stop
    start
}


usage () {
    echo "Open Baton NFVO"
    echo "Usage:\n\t [openbaton-nfvo start|stop|restart] | [service openbaton-nfvo start|stop|restart] | [start|stop openbaton-nfvo] | [systemctl start|stop openbaton-nfvo.service]"
}


##
#   MAIN
##

if [ ${#} -eq 0 ]
   then
        usage
        exit 1
fi

for cmd in ${@}
do
    case ${cmd} in
        "start" )
            start ;;
        "stop" )
            stop ;;
        "restart" )
            restart ;;
         *)   
	        usage;;
    esac
    if [ ${?} -ne 0 ];
    then
	    exit 1
    fi
done
